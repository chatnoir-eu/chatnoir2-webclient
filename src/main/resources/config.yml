---

# ChatNoir 2 main configuration file
#
# Optimized for the Webis betaweb cluster.

# ------------------------------------------------------------------------------------
# General ChatNoir settings
# ------------------------------------------------------------------------------------
general:
  # Serve behind a proxy, this enables handling for X-Forwarded-For headers
  proxy_serve: false


# ------------------------------------------------------------------------------------
# General cluster settings
# ------------------------------------------------------------------------------------

cluster:
  # Name of the Elasticsearch cluster
  cluster_name: betaweb

  # Initial hosts to connect to
  # These are not the only hosts used for searching. Further hosts are detected by sniffing
  hosts:
    - betaweb015.medien.uni-weimar.de
    - betaweb016.medien.uni-weimar.de
    - betaweb017.medien.uni-weimar.de
    - betaweb018.medien.uni-weimar.de
    - betaweb019.medien.uni-weimar.de

  # Elasticsearch transport port (default: 9300)
  port: 9300

  # Use sniffing to detect other hosts
  sniff: true

  # Indices the user is allowed to search
  indices:
    - cc1511
    - cc1704
    - cw09
    - cw12

  # Default indices to search when no explicit search index is defined
  default_indices:
    - cc1511

  # Define index aliases.
  # Raw index names in Elasticsearch responses will be replaced with the alias name
  index_aliases:
    - index: webis_warc_commoncrawl1704_001
      alias: cc1704
      display_name: CommonCrawl 04/2017

    - index: webis_warc_commoncrawl15_002
      alias: cc1511
      display_name: CommonCrawl 11/2015

    - index: webis_warc_clueweb09_003
      alias: cw09
      display_name: ClueWeb09

    - index: webis_warc_clueweb12_011
      alias: cw12
      display_name: ClueWeb12


# ------------------------------------------------------------------------------------
# Settings for HDFS services
# ------------------------------------------------------------------------------------

hdfs:
  # Hadoop namenode address
  defaultFS: hdfs://betaweb020:8020

  # Document mapfiles for retrieving cached documents
  # For each mapfile the HDFS path, the number of mapfile partitions and the
  # Webis UUID name prefix need to be given
  mapfiles:
    cw12:
      path: "/corpora/corpora-thirdparty/corpus-clueweb/12-mapfile"
      partitions: 100
      prefix: clueweb12

    cw09:
      path: "/corpora/corpora-thirdparty/corpus-clueweb/09-mapfile"
      partitions: 200
      prefix: clueweb09

    cc1511:
      path: "/corpora/corpus-commoncrawl/CC-MAIN-2015-11-mapfile"
      partitions: 100
      prefix: commoncrawl

    cc1704:
      path: "/corpora/corpus-commoncrawl/CC-MAIN-2017-04-mapfile"
      partitions: 200
      prefix: commoncrawl


# ------------------------------------------------------------------------------------
# User authentication settings
# ------------------------------------------------------------------------------------

auth:
  # Default session timeout in milliseconds
  default_session_timeout: 900000

  # Interval in which to run the periodic session validator in milliseconds
  session_validation_interval: 600000

  # Default API authentication settings
  api:
    # User index containing the API keys
    key_index: chatnoir2_apikeys

    # Default API quota limits to apply when no specific per-user limits are set.
    # A value smaller or equal 0 means unlimited.
    # The values here will be used to initially create a master key which can be
    # used to issue further keys which will then inherit from the master key.
    # After that, the values here will only be used if the key chain is broken.
    default_quota_limits:
      day: 10000     # limit for last 24 hours
      week: 70000    # limit for last 7 days
      month: 310000 # limit for last 30 days

# ------------------------------------------------------------------------------------
# Search engine result page display settings
# ------------------------------------------------------------------------------------

serp:
  # Number of results to show on one page (default: 10)
  results_per_page: 10

  # Length of snippets in result listings (default: 200)
  snippet_length: 300

  # Length of titles in result listings (default: 60)
  title_length: 70

  # Whether to group search results in listings by target hostname (default: true)
  group_by_hostname: true


# ------------------------------------------------------------------------------------
# Actual search parameters
# ------------------------------------------------------------------------------------

search:

  # Settings for the default simple (universal) search
  default_simple:

    # Main index fields to search.
    # Use the placeholder %lang% instead of actual language codes in language-specific fields.
    #
    # Possible parameters are:
    # - name: name of the field (required)
    # - boost: boost value for this field
    # - proximity_matching: whether to enable proximity matching for this field
    # - slop: up to which slop to match phrases
    # - proximity_boost: boost factor for matching phrases over other matching documents
    # - fuzzy_matching: whether to enable fuzzy matching (extremely expensive, use with caution!)
    #
    main_fields:
      - name: title_lang.%lang%
        boost: 70
        proximity_matching: true
        proximity_slop: 2
        proximity_boost: 30

      - name: body_lang.%lang%
        boost: 10
        proximity_matching: true
        proximity_slop: 2
        proximity_boost: 20

      - name: full_body_lang.%lang%

      - name: headings_lang.%lang%
        boost: 5

      - name: meta_desc_lang.%lang%
        boost: 1

      - name: meta_keywords_lang.%lang%
        boost: 1

      - name: warc_target_hostname
        boost: 1

      - name: warc_target_path
        boost: 10

      - name: warc_target_hostname.raw
        fuzzy_matching: true
        boost: 10

    # Boost results by a certain factor if a field contains values
    # matched by a regular expression.
    # You can use the %lang% placeholder for the current search language in
    # both the field name and the field value pattern.
    #
    # Make sure you use quotes and double backslashes for escape sequences.
    # Regular expressions are always anchored and must match the whole string.
    #
    # Possible parameters are:
    # - name: field name
    # - value: regular expression
    # - match: whether to use this rule for matching during pre-selection or only in the rescoring phase
    # - boost: boost factor to promote results by during rescoring
    # - match_boost: boosting factor to be applied during match phase (has no effect if match is false)
    #
    boosts:
      - name: warc_target_hostname.raw
        value: "%lang%\\.wikipedia\\.org"
        match: true
        boost: 30
        match_boost: 50
      - name: warc_target_path.raw
        value: "/(wiki/|index\\.[a-z]+)?"
        match: false
        boost: 70

    # Penalize (or negatively boost) results if a field contains specific
    # values matched by a regular expression.
    penalties:
      # Overall penalty factor
      penalty_factor: 0.02

      # Fields and values to penalize.
      # You can use the %lang% placeholder for the current search language in
      # both the field name and the field value pattern.
      #
      # Make sure you use quotes and double backslashes for escape sequences.
      # Regular expressions are always anchored and must match the whole string.
      #
      # Possible parameters are:
      # - name: field name
      # - value: (exact) value to match
      # - regexp: regular expression to match (only possible on keyword fields, overrides value)
      # - boost: individual boost for this field
      #
      fields: null

    # Supported user-defined query filters (such as site:example.com or lang:de)
    #
    # Possible parameters are:
    # - keyword: the filter keyword inside the query string
    # - field: the index field to filter by (special value: #index to allow the user
    #          to select an index instead of filtering by terms in a field)
    #
    query_filters:
      - keyword: site
        field: warc_target_hostname.raw

      - keyword: lang
        field: lang

      - keyword: index
        field: "#index"

    # Pre-computed numeric fields to modify the overall scoring.
    # Value factors are wrapped in the order they are defined here, i.e.,
    # the last entry in the list will be the out-most field value factor function.
    #
    # Possible parameters are:
    # - name: name of the field to use for calculation (must be numeric)
    # - modifier: a function modifier used for smoothing out values
    # - factor: an optional factor to multiply the function score by
    # - missing: value if the document has no such field
    #
    field_value_factors: null

    # Range filters to apply to a search before scoring.
    # Can be used to filter out very small or very large documents, spam etc.
    #
    # Possible parameters are:
    # - name: field name to filter by
    # - gt: value must be greater than
    # - gte: value must be greater than or equal
    # - lt: value must be less than
    # - lte: value must be less than or equal
    # - negate: if true, negates the filter
    # - include_unset: include documents where field is missing (default: false)
    #
    range_filters:
      - name: body_length
        gte: 100

      - name: spam_rank
        gte: 66
        include_unset: true

    # Limit on each node after which to terminate search and return early
    node_limit: 70000

    # Window size for results rescoring (the rescore query is potentially expensive,
    # so choose this as small as possible)
    rescore_window: 400

  # Pure phrase search settings
  phrase_search:
    # Default slop up to which to match phrases
    default_slop: 0

    # Maximum slop to accept
    max_slop: 2

    # Limit on each node after which to terminate search and return early
    node_limit: 4000

    # Index fields to search.
    # Use the placeholder %lang% instead of actual language codes in language-specific fields.
    #
    # Possible parameters are:
    # - name: name of the field (required)
    # - boost: boost value for this field
    fields:
      - name: body_lang.%lang%
        boost: 1.0
